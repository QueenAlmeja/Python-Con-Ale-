"""
Las cadenas de texto, no solo se pueden manipular empleando los valores de indices donde se ubica cada caracter.
Exiten m√©todos que nos permiten cambiar ciertos caract√©res, dependiendo de la necesidad que tengamos o requeramos efectuar

Ya conocemos algunas de las m√°s elementales como:
a. le() nos permite conocer el tama√±o o la cantidad de caracteres
b. index() y find() nos permite conocer el valor o indice de un caracter determinado
c. count() nos ayuda a determinar cuantas veces aparece un caracter dentro del conjunto de elementos almacenados en una variable
d. in nos ayuda a comprobar si un caracter forma parte de una cadena de texto
e. split() nos ayuda a extraer los elementos de una cadena de texto
Sin embargo, existen otros m√©todos que son importante estudiar
"""
print("Estos son ejercicios usando el m√©todo capitalize()\n")

#El m√©todo capitalize() cambia el primer caracter de la cadena de texto global por una letra may√∫scula. 
#Empleando el metodo capitalize(), solo la primera letra de la cadena de texto sera may√∫scula.

oracion = "estamos aprendiendo a programar en Python"
print(oracion.capitalize())

#otra forma ser√≠a
primera_letra = oracion.capitalize()
print(primera_letra)

print("\nEsto son ejercicios usando los m√©todos startswith() y endswith()\n")

#El metodo startswith() y endswith()

oracion = "estamos aprendiendo a programar en Python"
print(f"Estamos usando el metodo startswith para comprobar que la cadena de texto empieza con la la subcadena 'estamos' {oracion.startswith("estamos")}")
print(f"Estamos usando el metodo endswith para comprobar que la cadena de texto finaliza con la la subcadena 'aprendiendo' {oracion.endswith("aprendiendo")}")

"""
Los metodo startswith y endswith comprueban si una cadena de texto global comienza y finaliza con una subcadena especifica.
El output obtenido daran un resultado booelano, True o False
üî¥Recuerda que estos m√©todos son sensible al uso de may√∫sculas o min√∫sculas
"""

print("\nEsto son ejercicios usando los m√©todos upper() y lower()\n")

#Los m√©todos upper() y lower() nos permiten colocar todos los elementos de forman parte de una cadena en may√∫sculas o min√∫sculas

pelicula = "Call me by your name"
print(pelicula.upper())
print(pelicula.lower())

print("\nEsto son ejercicios usando los m√©todos isupper() y islower()\n")
#Los m√©todos isupper() y islower() comprueban si todos las subcadenas que forman parte del string global comienza con una letra may√∫sculas o min√∫sculas.

serie1 = "Se presume inocente"
serie2 = "when they see us"
print(serie1.isupper())
print(serie2.islower())

print("\nEste es un ejercicio usando el m√©todo title()\n")
#El m√©todo title() nos permite cambiar por una letra may√∫scula cada letra inicial de las subcadenas de texto de la str global

oracion = "estamos aprendiendo a programar en Python"
print(oracion.title())

print("\nEstos son ejercicios usando el m√©todo rfind()\n")
#El m√©todo de rfind() indica el √∫ltimo valor de indice en que aparece un caracter especifica:
print(oracion.rfind("o"))
print(oracion.rfind("a"))

#Tanto el m√©todo find() y rfind() devuelven -1 en el output cuando un caracter no se encuentra dentro del string. Ejemplo

print(oracion.find("x"))
print(oracion.rfind("x"))

print("\nEste es un ejercicio usando el m√©todo rindex()\n")

#El m√©todo rindex() devuelve en el output el valor de indice mas alto en el que se encuentra un caracter en una cadena de texto.Ejemplo

print(oracion.rindex("t"))

print("\nEste es un ejercicio usando el m√©todo swapcase()\n")

#El metodo swapcase() nos modificar√° las lestras may√∫sculas por min√∫sculas y las min√∫sculas por may√∫sculas

idea = "Esta Es Una Oracion Muy Corta"
print(idea.swapcase())

print("\nEste es un ejercicio usando el m√©todo strip()\n")

#El metodo strip() remueve todos los caracteres dados entre parentesis desde el inicio hasta el final de una cadena 
print(idea.strip("ta"))

print("\nEste es un ejercicio usando el m√©todo replace()\n")

#El metodo replace() permite modificar una subcadena 

oracion = "estamos aprendiendo a programar en Python"
print(oracion.replace("programar", "desarrollar"))

#üìåel uso de la coma para serpar los argumentos es importante en estos casos

print("\nEstos son ejercicios usando el m√©todo isalnum()\n")

"""
El metodo isalnum() comprueba si todos los caracteres que forman un string son elementos alfanumericos
en caso de que haya espacios en la cadena, el output dara como resultado un False
"""
oracion = "estamos aprendiendo a programar en Python"
oracion2 = "estamosaprendiendoaprogramarenPython"
print(oracion.isalnum())
print(oracion2.isalnum())

print("\nEstos son ejercicios usando los m√©todos isalpha() y isdecimal()\n")

"""
Los metodos isalpha() y isdecimal() corroboran si todos los elementos que forman parte de una cadena de caract√©res 
son elementos alfabeticos o n√∫meros enteros. En caso de que haya espacios en la cadena, el output dar√° como resultado un False
"""

ejemplo1 = "Llevo 3 dias aprendiendo python"
print(ejemplo1.isalpha())
print(ejemplo1.isdecimal())

print("\nEstos son ejercicios usando el m√©todo isnumeric()\n")

#El metodo isnumeric() comprueba si los caract√©res que forman parte de la cadena corresponde a un valor n√∫merico.

ejemplo2 = "2" #numero dos escrito en forma de string
print(ejemplo2.isnumeric())
ejemplo3 = "3.4"
print(ejemplo3.isnumeric())

"""üü¢Reto busca el concepto y uso de los siguientes metodos:
a. isidentifier() 
b. join()
c. expandtabs()
"""
